/*const buf1 = Buffer.from('text1');
const buf2 = Buffer.from('2text');
buf2.copy(buf1,2,2,3);
console.log(String(buf1));*/

//Compression
/*import zlib from 'zlib';
import fs from 'fs';

const gzip = zlib.createGzip();

const r = fs.createReadStream("./1.txt");
const w = fs.createWriteStream("./1.txt.gz");

r.pipe(gzip).pipe(w);*/

/*import zlib from 'zlib';
import fs from 'fs';

const gzip = zlib.createGzip();

const r = fs.createReadStream("./1.txt");
const w = fs.createWriteStream("./2.txt.gz");

r.pipe(unzip).pipe(w);*/

// std-in std-out

/*process.stdin.on('data',(data) => {

    if(data === 'pizza'){
        console.log('pizza')
    } else {
        console.log('not pizza')
    }
})*/

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ Node.js
const fs = require('fs'); // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
const zlib = require('zlib'); // –î–ª—è —Å–∂–∞—Ç–∏—è –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤
const readline = require('readline'); // –î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å

// –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å readline
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ä–µ–∂–∏–º–∞ "cherry"
let cherry = false;

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function mainMenu() {
  // –ó–∞–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–ø—Ä–æ—Å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –µ–≥–æ –æ—Ç–≤–µ—Ç
  rl.question('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É (compress, uncompress, help, end): ', (command) => {
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª "cherry", –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º "cherry" –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if (command === 'cherry') {
      cherry = !cherry;
      return mainMenu();
    }

    // –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
    if (command === 'compress') {
      compressFile();
    } else if (command === 'uncompress') {
      uncompressFile();
    } else if (command === 'help') {
      console.log('compress: —Å–∂–∏–º–∞–µ—Ç —Ñ–∞–π–ª\nuncompress: —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç —Ñ–∞–π–ª\nend: –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
      mainMenu();
    } else if (command === 'end') {
      rl.close();
    } else {
      console.log('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      mainMenu();
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∂–∞—Ç–∏—è —Ñ–∞–π–ª–∞
function compressFile() {
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Å–∂–∞—Ç–∏—è –∏ –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∂–∞—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
  rl.question('–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Å–∂–∞—Ç–∏—è: ', (inputPath) => {
    rl.question('–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–∂–∞—Ç–æ–≥–æ —Ñ–∞–π–ª–∞: ', (outputPath) => {
      // –°–æ–∑–¥–∞–µ–º –ø–æ—Ç–æ–∫–∏ —á—Ç–µ–Ω–∏—è –∏ –∑–∞–ø–∏—Å–∏ –∏ –æ–±—ä–µ–∫—Ç Gzip –¥–ª—è —Å–∂–∞—Ç–∏—è —Ñ–∞–π–ª–∞
      const gzip = zlib.createGzip();
      const source = fs.createReadStream(inputPath);
      const destination = fs.createWriteStream(outputPath.endsWith('.gz') ? outputPath : `${outputPath}.gz`);

      // –°–∂–∏–º–∞–µ–º —Ñ–∞–π–ª –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–∂–∞—Ç–∏–∏
      source.pipe(gzip).pipe(destination).on('finish', () => {
        console.log(cherry ? 'üçí –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∂–∞—Ç!' : '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∂–∞—Ç!');
        mainMenu();
      });
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ —Ñ–∞–π–ª–∞
function uncompressFile() {
  // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏
  rl.question('–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏: ', (inputPath) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ —Ñ–∞–π–ª —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .gz
    if (!inputPath.endsWith('.gz')) {
      console.log('–§–∞–π–ª –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .gz');
      return uncompressFile();
    }

    // –°–æ–∑–¥–∞–µ–º –ø–æ—Ç–æ–∫–∏ —á—Ç–µ–Ω–∏—è –∏ –∑–∞–ø–∏—Å–∏ –∏ –æ–±—ä–µ–∫—Ç Gunzip –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ —Ñ–∞–π–ª–∞
    const gunzip = zlib.createGunzip();
    const source = fs.createReadStream(inputPath);
    const destination = fs.createWriteStream(inputPath.slice(0, -3));

    // –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ
    source.pipe(gunzip).pipe(destination).on('finish', () => {
      console.log(cherry ? 'üçí –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω!' : '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω!');
      mainMenu();
    });
  });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
mainMenu();
